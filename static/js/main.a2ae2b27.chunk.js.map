{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Stats/Stats.module.css","App.module.css","Components/Form/Form.module.css","Redux/actions.js","Redux/reducer.js","Redux/store.js","Components/Contacts/operations.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/Stats/Stats.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactRejected","addContactRequest","addContactSuccess","addContactRejected","deleteContactRequest","deleteContactSuccess","deleteContactRejected","filterContacts","actions","items","createReducer","_","action","payload","state","filter","id","isLoading","error","combineReducers","rootReducer","contacts","contactReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","axios","defaults","baseURL","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","inputNameId","shortid","generate","inputNumberId","onInputChange","e","target","value","reset","onSubmit","event","data","preventDefault","some","item","alert","contact","post","then","catch","className","s","container","htmlFor","label","spanName","type","onChange","input","placeholder","autoComplete","ioIosPhonePortrait","button","Filter","inputFilterId","Stats","total","length","text","span","ContactList","normalizedFilter","toLowerCase","includes","getVisibleContacts","useEffect","a","get","response","message","onDeleteContact","contactId","delete","operations","contactList","map","list","onClick","App","style","textAlign","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2ae2b27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1uuJE\",\"title\":\"ContactList_title__3zeho\",\"list\":\"ContactList_list__1h3IQ\",\"text\":\"ContactList_text__y7jb6\",\"button\":\"ContactList_button__1y3KY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2onki\",\"label\":\"Filter_label__3wJ9q\",\"fiSearch\":\"Filter_fiSearch__28lDY\",\"input\":\"Filter_input__3kwjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Stats_text__3-h76\",\"span\":\"Stats_span__32jXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3QeRa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__ly1CI\",\"label\":\"Form_label__1-Ujv\",\"button\":\"Form_button__1PnQZ\",\"ioIosPhonePortrait\":\"Form_ioIosPhonePortrait__1hjUL\",\"spanName\":\"Form_spanName__1wKhS\",\"input\":\"Form_input__5Xge6\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n// import shortid from \"shortid\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\n\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\n\r\nexport const fetchContactRejected = createAction(\r\n  \"contacts/fetchContactRejected\"\r\n);\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\n\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\n\r\nexport const addContactRejected = createAction(\"contacts/addContactRejected\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactRejected = createAction(\r\n  \"contacts/deleteContactRejected\"\r\n);\r\n\r\nexport const filterContacts = createAction(\"contact/filter\");\r\n\r\nconst actions = {\r\n  filterContacts,\r\n};\r\nexport default actions;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport * as actions from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactSuccess]: (_, action) => action.payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [actions.fetchContactRequest]: () => true,\r\n  [actions.fetchContactSuccess]: () => false,\r\n  [actions.fetchContactRejected]: () => false,\r\n\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactRejected]: () => false,\r\n\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactRejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [actions.fetchContactRejected]: (_, action) => action.payload,\r\n  [actions.fetchContactRequest]: () => null,\r\n  [actions.addContactRejected]: (_, action) => action.payload,\r\n  [actions.deleteContactRejected]: (_, action) => action.payload,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  isLoading,\r\n  error,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport contactReducer from \"./reducer\";\r\n\r\n// const persistConfig = {\r\n//   key: \"contact\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  // contacts: persistReducer(persistConfig, contactReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const storePersistor = { store, persistor };\r\n\r\n// export default storePersistor;\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport * as actions from \"../../Redux/actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3030\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then((response) => dispatch(actions.fetchContactSuccess(response.data)))\r\n    .catch((error) => dispatch(actions.fetchContactRejected(error.message)));\r\n};\r\n\r\nexport const addContact = (data) => (dispatch) => {\r\n  const contact = {\r\n    name: data.name,\r\n    number: data.number,\r\n  };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactRejected(error)));\r\n};\r\n\r\nexport const deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactRejected(error)));\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as operations from \"../Contacts/operations\";\r\nimport { IoIosPhonePortrait } from \"react-icons/io\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const items = useSelector((state) => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputNameId = shortid.generate();\r\n  const inputNumberId = shortid.generate();\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const repeatName = items.some((item) => item.name === name);\r\n    if (repeatName) {\r\n      alert(`${name} is alreadi in contacts`);\r\n      return;\r\n    }\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      alert(\"Enter name and number please ! \");\r\n      return;\r\n    }\r\n    dispatch(operations.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onFormSubmit}>\r\n        <div className={s.container}>\r\n          <label htmlFor={inputNameId} className={s.label}>\r\n            Name <span className={s.spanName}>name</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id={inputNameId}\r\n            value={name}\r\n            onChange={onInputChange}\r\n            className={s.input}\r\n            placeholder=\"Enter name\"\r\n            autoComplete=\"Off\"\r\n          />\r\n        </div>\r\n\r\n        <div className={s.container}>\r\n          <label htmlFor={inputNumberId} className={s.label}>\r\n            Number\r\n            <span className={s.ioIosPhonePortrait}>\r\n              <IoIosPhonePortrait />\r\n            </span>\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id={inputNumberId}\r\n            value={number}\r\n            onChange={onInputChange}\r\n            className={s.input}\r\n            placeholder=\"Enter number\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport actions from \"../../Redux/actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const value = useSelector((state) => state.contacts.Filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (event) =>\r\n    dispatch(actions.filterContacts(event.target.value));\r\n  const inputFilterId = shortid.generate();\r\n  return (\r\n    <div className={s.container}>\r\n      <label htmlFor={inputFilterId} className={s.label}>\r\n        Find contacts of name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        id={inputFilterId}\r\n        className={s.input}\r\n        placeholder=\"Enter name please\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport s from \"./Stats.module.css\";\r\n\r\nexport default function Stats() {\r\n  const total = useSelector((state) => state.contacts.items.length);\r\n  return (\r\n    <div>\r\n      <p className={s.text}>\r\n        Total contact : <span className={s.span}>{total}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport * as operations from \"../Contacts/operations\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return items.filter((item) => {\r\n    return item.name.toLowerCase().includes(normalizedFilter);\r\n  });\r\n};\r\n\r\nexport default function ContactList() {\r\n  const items = useSelector((state) =>\r\n    getVisibleContacts(state.contacts.items, state.contacts.filter)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onDeleteContact = (contactId) =>\r\n    dispatch(operations.deleteContact(contactId));\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {items.length > 0 &&\r\n        items.map(({ name, number, id }) => (\r\n          <li key={id} className={s.list}>\r\n            <p className={s.text}>\r\n              {name} : {number}\r\n            </p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n","import ContactForm from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport Stats from \"./Components/Stats\";\nimport ContactList from \"./Components/ContactList\";\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <h3 style={{ textAlign: \"center\", color: \"var(--primary-color)\" }}>\n        Goit-react-hw-07-phonebook\n      </h3>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <Stats />\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./Redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}